---
description: 后端Api参考说明
globs: 
alwaysApply: false
---
# AriaVerse 后端API参考 (供前端AI使用)

本文档旨在为前端AI提供AriaVerse后端API的详细说明，以便更准确地理解和实现前端功能。

## 1. API设计规范

- **RESTful风格**: 所有API均遵循RESTful设计原则。
- **JSON格式**: 请求和响应数据主要使用JSON格式。
- **统一响应结构**: 后端API会返回统一的响应结构，方便前端处理。
    ```json
    {
      "code": 200, // 状态码，200表示成功，其他表示错误
      "message": "操作成功", // 提示信息
      "data": {} // 实际返回的数据
    }
    ```
- **错误处理**: API会通过HTTP状态码和响应体中的`code`、`message`字段来指示错误情况。
- **认证与授权**: API通过cookie进行认证，具体参考用户认证相关接口。

## 2. 核心API接口说明

以下是项目中一些核心功能的API接口描述。更详细的接口文档请参考Swagger或OpenAPI规范（如果项目中有集成）。

### 2.1 用户认证模块 (`/api/auth`)

- **POST `/api/agent/auth/register`**: 用户注册
    - **请求体**: `RegisterDTO` (包含 `email`, `username`, `password`)
    - **响应**: 统一响应结构，`data`中可能包含用户信息或成功提示。
- **POST `/api/agent/auth/login`**: 用户登录
    - **请求体**: `LoginDTO` (包含 `email`, `password`)
    - **行为**：在session中的`user`键中存储user_id，, `email`和`username`。
    - **响应**: 统一响应结构，`data`中包含 `user_id`, `email`和`username`。

### 2.2 AI聊天模块 (`/api/agent/ai`)

- **GET `/api/agent/ai/chat`**: 与AI进行对话 (流式接口)
    - **请求参数**:
        - `prompt` (String): 用户输入的提示词
        - `chatId` (String): 当前会话的ID
    - **响应**: `text/event-stream` 类型，AI逐字返回内容。
    - **认证**: 需要cookie

### 2.3 聊天会话管理模块 (`/api/agent/sessions`)

- **GET `/api/agent/sessions`**: 获取历史会话列表 (游标分页)
    - **请求参数**:
        - `lastConversationId` (String, 可选): 上一页最后一条会话的ID，用于游标分页
        - `pageSize` (Integer, 可选): 每页数量，默认为10
    - **响应**: 统一响应结构，`data`中包含 `ChatSessionVO` 列表。
    - **认证**: 需要cookie
- **PUT `/api/agent/sessions`**: 创建新的聊天会话
    - **请求参数**: `title` (可选，String)
    - **响应**: 统一响应结构，`data`中包含新创建的会话ID (`conversationId`)。
    - **认证**: 需要cookie
- **DELETE `/api/agent/sessions/{conversationId}`**: 删除指定的聊天会话
    - **路径参数**: `conversationId` (String): 要删除的会话ID
    - **请求参数**:
        - `clearChatMemory` (Boolean, 可选, 默认为true): 是否同时清除该会话的聊天记录
    - **响应**: 统一响应结构，提示删除成功或失败。
    - **认证**: 需要cookie
- **POST `/api/agent/sessions/batch-delete`**: 批量删除聊天会话
    - **请求体**: `BatchDeleteSessionsDTO` (包含 `conversationIds` 列表, `clearChatMemory` 布尔值)
    - **响应**: 统一响应结构，`data`中包含成功删除的数量。
    - **认证**: 需要cookie

### 2.4 聊天记录模块 (`/api/agent/history`)

- **GET `/api/agent/history/{conversationId}`**: 获取指定会话的聊天记录 (游标分页)
    - **路径参数**: `conversationId` (String): 会话ID
    - **请求参数**:
        - `lastMessageTimestamp` (String/Long, 可选): 上一页最后一条消息的时间戳，用于游标分页
        - `pageSize` (Integer, 可选): 每页数量，默认为10
    - **响应**: 统一响应结构，`data`中包含 `ChatMessageVO` 列表。
    - **认证**: 需要cookie

## 3. 数据传输对象 (DTO) 和视图对象 (VO) 说明

(这里可以根据需要，列出一些关键的DTO和VO的字段说明，例如 `UserRegisterDTO`, `ChatSessionVO`, `ChatMessageVO` 等，以便前端AI更好地理解数据结构。)

